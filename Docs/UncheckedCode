// Level loader -- i need to integrate into gameplay screen or loadscreen when I get home
// also need to integrate JSON.net for loading objs and perhaps Physics.NET/Box2D for physics and collision

 public class Level{
        private Level(){} //private ctor
        public const string LEVEL_DIRECTORY = "Levels";
        public string Name {get;set;}
        public Texture2D LevelMap {get;set;}
        public Texture2D CollisionMap {get;set;}
        public List<Actor> Actors {get;set;}
        public LeveLData {get;set;}
        public string RawLevelData {get;set;}

        // a static method for constructing levels
        public static Level Load(string Name)
        {

            //loads levelimage, collision imagage, level data file            
            if (content == null)
                    content = new ContentManager(ScreenManager.Game.Services, "Content");

            Level lvl = new Level();
            lvl.Name = Name;
            lvl.LevelMap = content.Load<Texture2D>(LEVEL_DIRECTORY+"//"+Name); //Required            
            lvl.CollisionMap = content.Load<Texture2D>(LEVEL_DIRECTORY +"//"+Name+"_coll" );  
            string filePath = Content.RootDirectory + "//" + LEVEL_DIRECTORY + "//" + Name + ".lvl";       
            lvl.RawLevelData = File.ReadAllText(filePath);
            lvl.LevelData = JsonConvert.DeserializeObject<Of List<Actor>>(RawLevelData);
            lvl.Actors = lvl.LeveLData.Actors;

            return lvl;
        }

    }

    public class LeveLData
    {
        public List<Actor> Actors {get;set;}
        public string MapName {get;set;}
        public Rectangle CameraStart {get;set;}
        public Vector2 PlayerStart {get;set;}        
    }
